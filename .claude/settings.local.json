{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(streamlit run:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(rm:*)",
      "Bash(git push:*)",
      "Bash(winget install:*)",
      "WebFetch(domain:projecttrench-uat.streamlit.app)",
      "WebFetch(domain:share.streamlit.io)",
      "WebFetch(domain:status.streamlit.io)",
      "WebFetch(domain:azure.microsoft.com)",
      "Bash(zip:*)",
      "Bash(powershell Compress-Archive:*)",
      "Bash(az:*)",
      "Bash(timeout:*)",
      "WebFetch(domain:demo.trenchcoat.pro)",
      "WebFetch(domain:github.com)",
      "Bash(unzip:*)",
      "Bash(ls:*)",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(git pull:*)",
      "Bash(where git)",
      "WebFetch(domain:projecttrench-demo.streamlit.app)",
      "Bash(cp:*)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"Fix requirements and add simple demo app\")",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" push origin main)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" add simple_app.py protect_code.py)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"Update demo URL references to trenchdemo.streamlit.app\")",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" add advanced_analytics.py)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"Add advanced analytics with ML predictions and portfolio optimization\")",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" add streamlit_app.py ultra_premium_dashboard.py)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"Fix: Remove duplicate set_page_config to resolve Streamlit error\")",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"Fix: Clean loading experience and enable tabs by removing auto-refresh\")",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" add ultra_premium_dashboard.py live_data_integration.py WORKFLOW_INTEGRATION.md)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"Enable Live Monitoring Mode: Real coin detection, notifications, and live data toggle\")",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" add ultra_premium_dashboard.py)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"Fix HTML rendering issue in coin card display - resolve malformed f-string\")",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" add .)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"üöÄ TrenchCoat Pro v2.1.0 - Complete Feature Integration\n\n‚Ä¢ ü§ñ Added ML Model Builder with interactive training\n‚Ä¢ üìä Integrated Historic Data Manager with Top10 validation  \n‚Ä¢ üìù Created automated dev blog system with Discord integration\n‚Ä¢ üé® Implemented professional branding system with custom UI\n‚Ä¢ üìö Added comprehensive README with full feature documentation\n‚Ä¢ üîß Enhanced dashboard with 5 professional tabs\n‚Ä¢ üì° Updated Discord webhook for dev-blog channel\n‚Ä¢ ‚ö° Optimized performance and user experience\n\nFull professional-grade cryptocurrency trading intelligence platform now complete!\")",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" add branding_system.py dev_blog_system.py historic_data_manager.py model_builder.py README.md ultra_premium_dashboard.py)",
      "Bash(\"C:\\Program Files\\Git\\cmd\\git.exe\" commit -m \"üöÄ TrenchCoat Pro v2.1.0 - Complete Feature Integration\n\n‚Ä¢ ü§ñ Added ML Model Builder with interactive training\n‚Ä¢ üìä Integrated Historic Data Manager with Top10 validation  \n‚Ä¢ üìù Created automated dev blog system with Discord integration\n‚Ä¢ üé® Implemented professional branding system with custom UI\n‚Ä¢ üìö Added comprehensive README with full feature documentation\n‚Ä¢ üîß Enhanced dashboard with 5 professional tabs\n\nFull professional-grade cryptocurrency trading intelligence platform!\")",
      "Bash(dir:*)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(find:*)",
      "Bash(powershell:*)",
      "Bash(mv:*)",
      "Bash(sqlite3:*)",
      "Bash(grep:*)",
      "Bash(git reset:*)",
      "WebFetch(domain:trenchdemo.streamlit.app)",
      "Bash(curl:*)",
      "Bash(git checkout:*)",
      "Bash(sed:*)",
      "WebFetch(domain:bit.ly)",
      "Bash(npm i:*)",
      "Bash(claude-code --version)",
      "Bash(npx:*)",
      "Bash(npm config:*)",
      "Bash(echo $PATH)",
      "Bash(claude --version)",
      "Bash(git fsck:*)",
      "Bash(git gc:*)",
      "WebFetch(domain:trenchcoat-pro.streamlit.app)",
      "Bash(git rm:*)",
      "Bash(chcp:*)"
    ],
    "deny": []
  }
}